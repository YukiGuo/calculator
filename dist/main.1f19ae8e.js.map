{"version":3,"sources":["main.js"],"names":["calculator","document","querySelector","keys","screen1","screen2","history","historyArray","symbol","symbolIndex","num1","num2","addEventListener","e","Array","from","parentNode","children","forEach","k","classList","remove","keyType","target","dataset","type","keyContent","textContent","screenNum1","value","screenNum2","previousKeyType","console","log","undefined","substring","indexOf","add","a","includes","innerHTML","answer","calculate","expression","newExpression","replace","eval"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["const calculator = document.querySelector('.calculator')\r\nconst keys = document.querySelector('.keyboard')\r\n\r\nconst screen1 = document.querySelector('.screen1')//上面的屏幕\r\nconst screen2 = document.querySelector('.screen2')//下面的屏幕\r\nconst history = document.querySelector('.history')//历史记录\r\nlet historyArray = []\r\nlet symbol\r\nlet symbolIndex\r\nlet num1 //计算公式里的第一个值\r\nlet num2 //计算公式里的第二个值\r\nkeys.addEventListener(\"click\", e => {\r\n    Array.from(keys.parentNode.children)\r\n        .forEach(k => k.classList.remove('is-depressed'))\r\n    // console.log(e.target.textContent)\r\n    let keyType = e.target.dataset.type\r\n    let keyContent = e.target.textContent\r\n    let screenNum1 = screen1.value\r\n    let screenNum2 = screen2.value\r\n\r\n\r\n\r\n    const previousKeyType = calculator.dataset.previousKeyType\r\n    if (keyType === 'number') {\r\n        // console.log('number key!')\r\n        console.log(symbol)\r\n        if (screenNum2 === '0') {\r\n            screen2.value = keyContent\r\n        } else {\r\n            screen2.value = screenNum2 + keyContent\r\n        }\r\n        if (symbol === undefined) {\r\n            num1 = screen2.value\r\n            num2 = undefined\r\n        } else {\r\n            num1 = screen2.value.substring(0, symbolIndex)\r\n            num2 = screen2.value.substring(symbolIndex + 1)\r\n        }\r\n        console.log(num1 + \"&\" + num2)\r\n    } else if (keyType === \"plus\" || keyType === \"subtract\" || keyType === \"divide\" || keyType === \"multiply\") {\r\n        if (!symbol) {\r\n            symbol = keyContent\r\n            console.log('operator key')\r\n            console.log(\"symbol\" + symbol)\r\n            screen2.value = screenNum2 + keyContent\r\n            symbolIndex = screen2.value.indexOf(symbol)\r\n            console.log(symbolIndex)\r\n            keys.classList.add('is-depressed')//?\r\n            calculator.dataset.previousKeyType = 'operator'//?\r\n        }\r\n    } else if (keyType == \"\") {\r\n\r\n    } else if (keyType === \"decimal\") {\r\n        let a = screen2.value.substring(symbolIndex + 1)\r\n        if (symbol === undefined) {\r\n            if (!screen2.value.includes('.')) {\r\n                console.log('num1没有点')\r\n                screen2.value = screenNum2 + keyContent\r\n            }\r\n        } else {\r\n            if (!(a.includes('.'))) {\r\n                screen2.value = screenNum2 + keyContent\r\n            }\r\n        }\r\n\r\n        console.log('decimal key!')\r\n\r\n    }\r\n    else if (keyType === \"clear\") {\r\n        console.log('clear key!')\r\n        screen2.value = ''\r\n        screen1.value = ''\r\n        history.innerHTML = ''\r\n    }\r\n    else if (keyType === \"equal\") {\r\n        console.log('equal key!')\r\n        symbol = ''\r\n        screen1.value = screenNum2\r\n        let answer = calculate(screenNum2)\r\n        history.innerHTML += `<div>${screenNum2}=${answer}</div>`\r\n        screen2.value = answer\r\n    }\r\n})\r\n\r\n\r\nconst calculate = (expression) => {\r\n    let newExpression = expression\r\n    if (expression.includes(\"÷\")) {\r\n        newExpression = expression.replace(\"÷\", \"/\")\r\n    } else if (expression.includes(\"×\")) {\r\n        newExpression = expression.replace(\"×\", \"*\")\r\n    }\r\n    return eval(newExpression)\r\n}"]}